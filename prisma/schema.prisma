// Define o gerador de cliente Prisma para JavaScript
generator client {
  provider = "prisma-client-js"
}

// Define a fonte de dados como um banco de dados SQLite e o caminho do arquivo do banco de dados
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Funcionario {
  id       Int    @id @unique @default(autoincrement())
  nome     String
  telefone String
  email    String
  senha    String
  cargo    String

  // Campo de Relações
  entrada_de_produto       Entrada_de_Produto[] // Um funcionário pode estar associado a várias entradas de produtos
  encomenda_de_ingrediente Encomenda_de_Ingrediente[] // Um funcionário pode estar associado a várias encomendas de ingredientes
  saida_de_produto         Saida_de_Produto[] // Um funcionário pode estar associado a várias saídas de produtos
}

model Fornecedor {
  id              Int    @id @unique @default(autoincrement())
  nome_fornecedor String
  endereco        String
  telefone        String
  email           String

  // Campo de Relações
  entrada_de_produto Entrada_de_Produto[] // Um fornecedor pode estar associado a várias entradas de produtos
}

model Entrada_de_Produto {
  id                  Int      @id @unique @default(autoincrement())
  id_produto          Int
  id_fornecedor       Int
  id_funcionario      Int
  data                DateTime
  valor_total_entrada Int
  quantidade          Int

  // Campo de Relações
  encomenda_de_ingredientes Encomenda_de_Ingrediente[]

  //FK - Uma entrada de produto está associada a um produto específico
  produto     Produto     @relation(fields: [id_produto], references: [id])
  //FK - Uma entrada de produto está associada a um fornecedor específico
  fornecedor  Fornecedor  @relation(fields: [id_fornecedor], references: [id])
  //FK - Uma entrada de produto está associada a um funcionário específico
  funcionario Funcionario @relation(fields: [id_funcionario], references: [id])

}

model Encomenda_de_Ingrediente {
  id               Int      @id @unique @default(autoincrement())
  id_entrada       Int      @unique
  id_funcionario   Int
  status           String
  data_de_validade DateTime?

  // Campo de Relações
  // FK - Uma encomenda de ingrediente está associada a um funcionário específico
  funcionario        Funcionario        @relation(fields: [id_funcionario], references: [id])
  // Relação one-to-one com Entrada_de_Produto
  entrada_de_produto Entrada_de_Produto @relation(fields: [id_entrada], references: [id]) 
}


model Saida_de_Produto {
  id             Int      @id @unique @default(autoincrement())
  id_funcionario Int
  id_produto     Int
  data           DateTime
  quantidade     Int

  // Campo de Relações
  //FK - Uma saída de produto está associada a um funcionário específico
  funcionario Funcionario @relation(fields: [id_funcionario], references: [id])
  //FK - Uma saída de produto está associada a um produto específico 
  produto     Produto     @relation(fields: [id_produto], references: [id]) 
}

model Produto {
  id            Int    @id @unique @default(autoincrement())
  id_categoria  Int
  nome_produto  String
  descricao     String
  valor_produto Int

  // Campo de Relações
  //FK - Um produto está associado a uma categoria específica
  categoria Categoria @relation(fields: [id_categoria], references: [id]) 

  entrada_de_produto Entrada_de_Produto[] // Um produto pode estar associado a várias entradas de produtos
  saidas_de_produto  Saida_de_Produto[]   // Um produto pode estar associado a várias saídas de produtos
  estoque            Estoque[]            // Um produto pode estar associado a vários registros no estoque
}

model Estoque {
  id         Int @id @unique @default(autoincrement())
  id_produto Int
  quantidade Int

  // Campo de Relações
  //Fk - Um registro no estoque está associado a um produto específico
  produto Produto @relation(fields: [id_produto], references: [id]) 
}

model Categoria {
  id             Int    @id @unique @default(autoincrement())
  tipo_categoria String

  // Campo de Relações
  produto Produto[] // Uma categoria pode estar associada a vários produtos
}
